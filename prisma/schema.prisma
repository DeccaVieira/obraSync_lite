// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Manager {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  cpf           String      @unique
  phone         String      @unique
  role          String
  cnpj          String?
  company_name  String?
  employees     Employee[]  @relation("ManagerEmployees")
  customers     Customer[]  @relation("ManagerCustomers")
  projects      Project[]   @relation("ManagerProjects")
  is_active     Boolean     @default(false)
  password_hash String
}

model Employee {
  id              Int       @id @default(autoincrement())
  name            String
  date_of_birth   DateTime  @db.Date
  rg              String
  cpf             String    @unique
  drivers_license Boolean
  admission_date  DateTime  @db.Date
  password_hash   String
  occupation      String
  manager_id      Int
  manager         Manager   @relation("ManagerEmployees", fields: [manager_id], references: [id])
  active          Boolean   @default(true)
}

model Customer {
  id              Int        @id @default(autoincrement())
  name            String
  cpf             String
  email           String
  phone           String
  client_since    DateTime   @db.Date
  cnpj            String?
  company_name    String?
  password_hash   String
  manager_id      Int
  projects        Project[]  @relation("CustomerProjects")
  manager         Manager    @relation("ManagerCustomers", fields: [manager_id], references: [id])
  active          Boolean    @default(true)
}

model Project {
  id                     Int        @id @default(autoincrement())
  address                String
  contracted_services    Json?      // array/objeto JSON com servi√ßos contratados
  material_estimate      Json?      // array/objeto JSON com estimativa de materiais
  estimated_start_date   DateTime   @db.Date
  estimated_end_date     DateTime   @db.Date
  manager_id             Int
  estimated_cost_of_materials Float
  total_estimated_cost_of_services  Float
  total_cost  Float
  manager                Manager    @relation("ManagerProjects", fields: [manager_id], references: [id])
  customer_id            Int
  customer               Customer   @relation("CustomerProjects", fields: [customer_id], references: [id])
  active                 Boolean    @default(true)

}